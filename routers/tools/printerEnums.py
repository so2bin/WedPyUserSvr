class PrinterStatus(object):
    PRINTER_STATUS_ERROR = 0x00000002
    PRINTER_STATUS_BUSY = 0x00000200
    PRINTER_STATUS_DOOR_OPEN = 0x00400000
    PRINTER_STATUS_INITIALIZING = 0x00008000
    PRINTER_STATUS_IO_ACTIVE = 0x00000100
    PRINTER_STATUS_MANUAL_FEED = 0x00000020
    PRINTER_STATUS_NOT_AVAILABLE = 0x00001000
    PRINTER_STATUS_OFFLINE = 0x00000080
    PRINTER_STATUS_OUT_OF_MEMORY = 0x00200000
    PRINTER_STATUS_PAGE_PUNT = 0x00080000
    PRINTER_STATUS_PAPER_JAM = 0x00000008
    PRINTER_STATUS_PAPER_OUT = 0x00000010
    PRINTER_STATUS_PAPER_PROBLEM = 0x00000040
    PRINTER_STATUS_PAUSED = 0x00000001
    PRINTER_STATUS_PENDING_DELETION = 0x00000004
    PRINTER_STATUS_POWER_SAVE = 0x01000000
    PRINTER_STATUS_PRINTING = 0x00000400
    PRINTER_STATUS_PROCESSING = 0x00004000
    PRINTER_STATUS_SERVER_OFFLINE = 0x02000000
    PRINTER_STATUS_SERVER_UNKNOWN = 0x00800000
    PRINTER_STATUS_WAITING = 0x00002000
    PRINTER_STATUS_WARMING_UP = 0x00010000

    @classmethod
    def type_to_text(cls, _type):
        if not hasattr(cls, '_MAP'):
            setattr(cls, '_MAP', {})
        if not cls._MAP:
            for key, val in cls.__dict__.items():
                if key.startswith('PRINTER_'):
                    cls._MAP[val] = key
        return cls._MAP.get(_type)
